Problem Link: https://www.hackerrank.com/challenges/magic-square-forming/submissions/code/192630589


#include <bits/stdc++.h>

using namespace std;

// Complete the formingMagicSquare function below.
int formingMagicSquare(vector<vector<int>> s) {
vector<vector<int>> m1,m2,m3,m4,m5,m6,m7,m8;
m1={{4,9,2},{3,5,7},{8,1,6}};
m2={{8,1,6},{3,5,7},{4,9,2}};
m3={{6,1,8},{7,5,3},{2,9,4}};
m4={{2,9,4},{7,5,3},{6,1,8}};
m5={{8,3,4},{1,5,9},{6,7,2}};
m6={{4,3,8},{9,5,1},{2,7,6}};
m7={{6,7,2},{1,5,9},{8,3,4}};
m8={{2,7,6},{9,5,1},{4,3,8}};
int sum[8]={0,0,0,0,0,0,0,0};
for(int i=0;i<3;i++)
{
    for(int j=0;j<3;j++)
    {
        sum[0]+=abs(s[i][j]-m1[i][j]);
        sum[1]+=abs(s[i][j]-m2[i][j]);
        sum[2]+=abs(s[i][j]-m3[i][j]);
        sum[3]+=abs(s[i][j]-m4[i][j]);
        sum[4]+=abs(s[i][j]-m5[i][j]);
        sum[5]+=abs(s[i][j]-m6[i][j]);
        sum[6]+=abs(s[i][j]-m7[i][j]);
        sum[7]+=abs(s[i][j]-m8[i][j]);
    }
}
int min=sum[0];
for(int i=1;i<8;i++)
{
    if(min>sum[i])
    {
        min=sum[i];
    }
}
return min;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    vector<vector<int>> s(3);
    for (int i = 0; i < 3; i++) {
        s[i].resize(3);

        for (int j = 0; j < 3; j++) {
            cin >> s[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = formingMagicSquare(s);

    fout << result << "\n";

    fout.close();

    return 0;
}
